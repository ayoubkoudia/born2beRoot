Mandatory part------------------------------------------------------------------------------------------------------------------------------------------

"su" 									
"apt install sudo" 						
"adduser akoudia sudo"
reboot
-------------------------------------------------------------------------------------------------------------------------------------------------------------
"sudo apt update"						
"sudo visudo	
		Defaults		passwd_tries=3									
		Defaults		badpass_message="Ralat"
		Defaults		logfile="/var/log/sudo/sudolog.tmp"					
		Defaults		log_input,log_output							
		Defaults		iolog_dir="/var/log/sudo"						.
		Defaults		requiretty										
		Defaults		secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
reboot
------------------------------------------------------------------------------------------------------------------------------------------------------------
"sudo apt install openssh-server"		
"sudo nano /etc/ssh/sshd_config"		
		"#Port 22"---------->"Port 4242" 
		"#PermitRootLogin prohibit-password"---------->"PermitRootLogin no" 
reboot
------------------------------------------------------------------------------------------------------------------------------------------------------------
"sudo service ssh status"				
"sudo apt install ufw"					
"sudo ufw enable"					
"sudo ufw allow 4242"				
"sudo ufw status"						
poweroff
--------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------
"sudo nano /etc/login.defs"			
	@-) PASS_MAX_DAYS	99999 --> PASS_MAX_DAYS	30 
	@-) PASS_MIN_DAYS	0 --> PASS_MIN_DAYS	2 
	@-) PASS_WARN_AGE   7 
"sudo apt install libpam-pwquality"	
"sudo nano /etc/pam.d/common-password"
			
password		requisite	pam_pwquality.so retry=3 minlen=10 ucredit=-1 dcredit=-1 maxrepeat=3 reject_username difok=7 enforce_for_root
--------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------
"sudo addgroup user42"					
"sudo adduser akoudia user42"	
"sudo passwd akoudia"			
-------------------------------------------------------------------------------------------------------------------------------------------------------------
"sudo crontab -u root -e"
*/10 * * * * /usr/local/bin/monitoring.sh
	


Bonus---------------------------------------------------------------------------------------------------------------------------------------------------

#1: Installation
Watch bonus installation walkthrough (no audio) here.

#2: Linux Lighttpd MariaDB PHP (LLMP) Stack
Step 1: Installing Lighttpd
Install lighttpd via sudo apt install lighttpd.

$ sudo apt install lighttpd
Verify whether lighttpd was successfully installed via dpkg -l | grep lighttpd.

$ dpkg -l | grep lighttpd
Allow incoming connections using Port 80 via sudo ufw allow 80.

$ sudo ufw allow 80
Step 2: Installing & Configuring MariaDB
Install mariadb-server via sudo apt install mariadb-server.

$ sudo apt install mariadb-server
Verify whether mariadb-server was successfully installed via dpkg -l | grep mariadb-server.

$ dpkg -l | grep mariadb-server
Start interactive script to remove insecure default settings via sudo mysql_secure_installation.

$ sudo mysql_secure_installation
Enter current password for root (enter for none): #Just press Enter (do not confuse database root with system root)
Set root password? [Y/n] n
Remove anonymous users? [Y/n] Y
Disallow root login remotely? [Y/n] Y
Remove test database and access to it? [Y/n] Y
Reload privilege tables now? [Y/n] Y
Log in to the MariaDB console via sudo mariadb.

$ sudo mariadb
MariaDB [(none)]>
Create new database via CREATE DATABASE <database-name>;.

MariaDB [(none)]> CREATE DATABASE <database-name>;
Create new database user and grant them full privileges on the newly-created database via GRANT ALL ON <database-name>.* TO '<username-2>'@'localhost' IDENTIFIED BY '<password-2>' WITH GRANT OPTION;.

MariaDB [(none)]> GRANT ALL ON <database-name>.* TO '<username-2>'@'localhost' IDENTIFIED BY '<password-2>' WITH GRANT OPTION;
Flush the privileges via FLUSH PRIVILEGES;.

MariaDB [(none)]> FLUSH PRIVILEGES;
Exit the MariaDB shell via exit.

MariaDB [(none)]> exit
Verify whether database user was successfully created by logging in to the MariaDB console via mariadb -u <username-2> -p.

$ mariadb -u <username-2> -p
Enter password: <password-2>
MariaDB [(none)]>
Confirm whether database user has access to the database via SHOW DATABASES;.

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| <database-name>    |
| information_schema |
+--------------------+
Exit the MariaDB shell via exit.

MariaDB [(none)]> exit
Step 3: Installing PHP
Install php-cgi & php-mysql via sudo apt install php-cgi php-mysql.

$ sudo apt install php-cgi php-mysql
Verify whether php-cgi & php-mysql was successfully installed via dpkg -l | grep php.

$ dpkg -l | grep php
Step 4: Downloading & Configuring WordPress
Install wget via sudo apt install wget.

$ sudo apt install wget
Download WordPress to /var/www/html via sudo wget http://wordpress.org/latest.tar.gz -P /var/www/html.

$ sudo wget http://wordpress.org/latest.tar.gz -P /var/www/html
Extract downloaded content via sudo tar -xzvf /var/www/html/latest.tar.gz.

$ sudo tar -xzvf /var/www/html/latest.tar.gz
Remove tarball via sudo rm /var/www/html/latest.tar.gz.

$ sudo rm /var/www/html/latest.tar.gz
Copy content of /var/www/html/wordpress to /var/www/html via sudo cp -r /var/www/html/wordpress/* /var/www/html.

$ sudo cp -r /var/www/html/wordpress/* /var/www/html
Remove /var/www/html/wordpress via sudo rm -rf /var/www/html/wordpress

$ sudo rm -rf /var/www/html/wordpress
Create WordPress configuration file from its sample via sudo cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php.

$ sudo cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php
Configure WordPress to reference previously-created MariaDB database & user via sudo vi /var/www/html/wp-config.php.

$ sudo vi /var/www/html/wp-config.php
Replace the below

23 define( 'DB_NAME', 'database_name_here' );^M
26 define( 'DB_USER', 'username_here' );^M
29 define( 'DB_PASSWORD', 'password_here' );^M
with:

23 define( 'DB_NAME', '<database-name>' );^M
26 define( 'DB_USER', '<username-2>' );^M
29 define( 'DB_PASSWORD', '<password-2>' );^M
Step 5: Configuring Lighttpd
Enable below modules via sudo lighty-enable-mod fastcgi; sudo lighty-enable-mod fastcgi-php; sudo service lighttpd force-reload.

$ sudo lighty-enable-mod fastcgi
$ sudo lighty-enable-mod fastcgi-php
$ sudo service lighttpd force-reload
#3: File Transfer Protocol (FTP)
Step 1: Installing & Configuring FTP
Install FTP via sudo apt install vsftpd.

$ sudo apt install vsftpd
Verify whether vsftpd was successfully installed via dpkg -l | grep vsftpd.

$ dpkg -l | grep vsftpd
Allow incoming connections using Port 21 via sudo ufw allow 21.

$ sudo ufw allow 21
Configure vsftpd via sudo vi /etc/vsftpd.conf.

$ sudo vi /etc/vsftpd.conf
To enable any form of FTP write command, uncomment below line:

31 #write_enable=YES
To set root folder for FTP-connected user to /home/<username>/ftp, add below lines:

$ sudo mkdir /home/<username>/ftp
$ sudo mkdir /home/<username>/ftp/files
$ sudo chown nobody:nogroup /home/<username>/ftp
$ sudo chmod a-w /home/<username>/ftp
<~~~>
user_sub_token=$USER
local_root=/home/$USER/ftp
<~~~>
To prevent user from accessing files or using commands outside the directory tree, uncomment below line:

114 #chroot_local_user=YES
To whitelist FTP, add below lines:

$ sudo vi /etc/vsftpd.userlist
$ echo <username> | sudo tee -a /etc/vsftpd.userlist
<~~~>
userlist_enable=YES
userlist_file=/etc/vsftpd.userlist
userlist_deny=NO
<~~~>
--------------------------------------------------------------------------------------------------------------------------------------------------------
